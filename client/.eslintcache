[{"/mnt/d/react-apps/les-chat-pern-gql/client/src/index.js":"1","/mnt/d/react-apps/les-chat-pern-gql/client/src/App.js":"2","/mnt/d/react-apps/les-chat-pern-gql/client/src/styles/customTheme.js":"3","/mnt/d/react-apps/les-chat-pern-gql/client/src/styles/muiStyles.js":"4","/mnt/d/react-apps/les-chat-pern-gql/client/src/pages/Routes.js":"5","/mnt/d/react-apps/les-chat-pern-gql/client/src/pages/RegisterForm.js":"6","/mnt/d/react-apps/les-chat-pern-gql/client/src/pages/LoginForm.js":"7","/mnt/d/react-apps/les-chat-pern-gql/client/src/graphql/mutations.js":"8","/mnt/d/react-apps/les-chat-pern-gql/client/src/graphql/fragments.js":"9","/mnt/d/react-apps/les-chat-pern-gql/client/src/apolloClient.js":"10","/mnt/d/react-apps/les-chat-pern-gql/client/src/context/auth.js":"11","/mnt/d/react-apps/les-chat-pern-gql/client/src/utils/localStorage.js":"12","/mnt/d/react-apps/les-chat-pern-gql/client/src/components/NavBar.js":"13","/mnt/d/react-apps/les-chat-pern-gql/client/src/components/UserButtonsDesktop.js":"14","/mnt/d/react-apps/les-chat-pern-gql/client/src/components/UserMenuMobile.js":"15","/mnt/d/react-apps/les-chat-pern-gql/client/src/pages/Main.js":"16","/mnt/d/react-apps/les-chat-pern-gql/client/src/graphql/queries.js":"17","/mnt/d/react-apps/les-chat-pern-gql/client/src/components/UsersAndGroups.js":"18","/mnt/d/react-apps/les-chat-pern-gql/client/src/utils/helperFuncs.js":"19","/mnt/d/react-apps/les-chat-pern-gql/client/src/components/LatestMessage.js":"20"},{"size":510,"mtime":1607176479486,"results":"21","hashOfConfig":"22"},{"size":548,"mtime":1607177146872,"results":"23","hashOfConfig":"22"},{"size":802,"mtime":1607605327080,"results":"24","hashOfConfig":"22"},{"size":3309,"mtime":1607609385243,"results":"25","hashOfConfig":"22"},{"size":686,"mtime":1607442330272,"results":"26","hashOfConfig":"22"},{"size":7162,"mtime":1607242309901,"results":"27","hashOfConfig":"22"},{"size":5061,"mtime":1607242299213,"results":"28","hashOfConfig":"22"},{"size":546,"mtime":1607172317380,"results":"29","hashOfConfig":"22"},{"size":325,"mtime":1607441987137,"results":"30","hashOfConfig":"22"},{"size":609,"mtime":1607445756867,"results":"31","hashOfConfig":"22"},{"size":1306,"mtime":1607176430273,"results":"32","hashOfConfig":"22"},{"size":662,"mtime":1607176371247,"results":"33","hashOfConfig":"22"},{"size":2426,"mtime":1607348684168,"results":"34","hashOfConfig":"22"},{"size":1414,"mtime":1607606198407,"results":"35","hashOfConfig":"22"},{"size":2836,"mtime":1607348563638,"results":"36","hashOfConfig":"22"},{"size":370,"mtime":1607603776707,"results":"37","hashOfConfig":"22"},{"size":758,"mtime":1607445312024,"results":"38","hashOfConfig":"22"},{"size":2776,"mtime":1607609027932,"results":"39","hashOfConfig":"22"},{"size":444,"mtime":1607605504143,"results":"40","hashOfConfig":"22"},{"size":853,"mtime":1607608884029,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"xpqoz5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/react-apps/les-chat-pern-gql/client/src/index.js",[],["84","85"],"/mnt/d/react-apps/les-chat-pern-gql/client/src/App.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/styles/customTheme.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/styles/muiStyles.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/pages/Routes.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/pages/RegisterForm.js",["86"],"import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REGISTER_USER } from '../graphql/mutations';\r\nimport { useAuthContext } from '../context/auth';\r\n//import { useStateContext } from '../context/state';\r\n//import ErrorMessage from './ErrorMessage';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n//import { getErrorMsg } from '../utils/helperFuncs';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Link,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useAuthFormStyles } from '../styles/muiStyles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport EnhancedEncryptionIcon from '@material-ui/icons/EnhancedEncryption';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .required('Required')\r\n    .max(20, 'Must be at most 20 characters')\r\n    .min(3, 'Must be at least 3 characters')\r\n    .matches(\r\n      /^[a-zA-Z0-9-_]*$/,\r\n      'Only alphanum, dash & underscore characters are allowed'\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(6, 'Must be at least 6 characters'),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(6, 'Must be at least 6 characters'),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [showConfPass, setShowConfPass] = useState(false);\r\n  const classes = useAuthFormStyles();\r\n  const { setUser } = useAuthContext();\r\n  //const { notify } = useStateContext();\r\n  const { register, handleSubmit, reset, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER, {\r\n    onError: (err) => {\r\n      //setErrorMsg(getErrorMsg(err));\r\n    },\r\n  });\r\n\r\n  const onRegister = ({ username, password, confirmPassword }) => {\r\n    if (password !== confirmPassword)\r\n      return setErrorMsg('Both passwords need to match.');\r\n\r\n    registerUser({\r\n      variables: { username, password },\r\n      update: (_, { data }) => {\r\n        console.log(data);\r\n        setUser(data.register);\r\n        /*notify(\r\n          `Welcome, ${data.register.username}! You've successfully registered.`\r\n        );*/\r\n        reset();\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h4\" color=\"secondary\" className={classes.title}>\r\n          Welcome to <strong>LesChat!</strong>\r\n        </Typography>\r\n        <form onSubmit={handleSubmit(onRegister)} className={classes.form}>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              error={'username' in errors}\r\n              helperText={'username' in errors ? errors.username.message : ''}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <PersonIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"password\"\r\n              type={showPass ? 'text' : 'password'}\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              error={'password' in errors}\r\n              helperText={'password' in errors ? errors.password.message : ''}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showPass ? (\r\n                        <VisibilityOffIcon color=\"secondary\" />\r\n                      ) : (\r\n                        <VisibilityIcon color=\"secondary\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"confirmPassword\"\r\n              type={showConfPass ? 'text' : 'password'}\r\n              label=\"Confirm Password\"\r\n              variant=\"outlined\"\r\n              error={'confirmPassword' in errors}\r\n              helperText={\r\n                'confirmPassword' in errors\r\n                  ? errors.confirmPassword.message\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowConfPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showConfPass ? (\r\n                        <VisibilityOffIcon color=\"secondary\" />\r\n                      ) : (\r\n                        <VisibilityIcon color=\"secondary\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <EnhancedEncryptionIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            startIcon={<PersonAddIcon />}\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className={classes.submitButton}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body1\" className={classes.footerText}>\r\n          Already have an account?{' '}\r\n          <Link className={classes.link} component={RouterLink} to=\"/login\">\r\n            Log In\r\n          </Link>\r\n        </Typography>\r\n        {/*<ErrorMessage\r\n        errorMsg={errorMsg}\r\n        clearErrorMsg={() => setErrorMsg(null)}\r\n      />*/}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","/mnt/d/react-apps/les-chat-pern-gql/client/src/pages/LoginForm.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/graphql/mutations.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/graphql/fragments.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/apolloClient.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/context/auth.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/utils/localStorage.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/components/NavBar.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/components/UserButtonsDesktop.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/components/UserMenuMobile.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/pages/Main.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/graphql/queries.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/components/UsersAndGroups.js",["87","88"],"/mnt/d/react-apps/les-chat-pern-gql/client/src/utils/helperFuncs.js",[],"/mnt/d/react-apps/les-chat-pern-gql/client/src/components/LatestMessage.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":52,"column":10,"nodeType":"95","messageId":"96","endLine":52,"endColumn":18},{"ruleId":"93","severity":1,"message":"97","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":23},{"ruleId":"93","severity":1,"message":"98","line":15,"column":3,"nodeType":"95","messageId":"96","endLine":15,"endColumn":13},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'errorMsg' is assigned a value but never used.","Identifier","unusedVar","'formatDateAgo' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation"]